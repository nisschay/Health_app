import re 

TEST_CATEGORY_TO_BODY_PARTS = {
    "Haematology": ["Blood", "Bone Marrow"],
    "Complete Blood Count": ["Blood"],
    "Liver Function Test": ["Liver", "Digestive System"],
    "Kidney Function Test": ["Kidneys", "Urinary System"],
    "Lipid Profile": ["Blood", "Cardiovascular System", "Heart"],
    "Thyroid Profile": ["Thyroid", "Endocrine System"],
    "Blood Sugar": ["Blood", "Endocrine System", "Metabolism"],
    "Electrolytes": ["Blood", "Kidneys", "Metabolism"],
    "Urinalysis": ["Kidneys", "Urinary System"],
    "Cardiac Markers": ["Heart", "Cardiovascular System"],
    "Vitamins": ["Blood", "Nutritional Status", "Metabolism"],
    "Hormone Profile": ["Endocrine System", "Metabolism"],
    "Tumor Markers": ["Multiple Systems"],
    "Allergy Profile": ["Immune System", "Blood"],
    "Immunology": ["Immune System", "Blood"],
    "Coagulation Profile": ["Blood"],
    "Infectious Disease": ["Immune System", "Multiple Systems"],
    "Bone Profile": ["Bone", "Metabolism"],
    "Protein Profile": ["Blood", "Liver", "Nutritional Status"],
    "Metabolic Panel": ["Metabolism", "Multiple Systems"],
    "Inflammatory Markers": ["Immune System", "Blood"],
    "Other": ["General"]
}

# Map individual tests to categories
TEST_TO_CATEGORY = {
    "Haemoglobin": "Haematology",
    "Total Leucocyte Count": "Haematology",
    "Platelet Count": "Haematology",
    "Red Blood Cell Count": "Haematology",
    "White Blood Cell Count": "Haematology",
    "Neutrophils": "Haematology",
    "Lymphocytes": "Haematology",
    "Monocytes": "Haematology",
    "Eosinophils": "Haematology",
    "Basophils": "Haematology",
    "SGPT": "Liver Function Test",
    "SGOT": "Liver Function Test",
    "Alkaline Phosphatase": "Liver Function Test",
    "Bilirubin": "Liver Function Test",
    "Total Protein": "Protein Profile",
    "Albumin": "Protein Profile",
    "Globulin": "Protein Profile",
    "Creatinine": "Kidney Function Test",
    "Urea": "Kidney Function Test",
    "Uric Acid": "Kidney Function Test",
    "Cholesterol": "Lipid Profile",
    "Triglycerides": "Lipid Profile",
    "HDL": "Lipid Profile",
    "LDL": "Lipid Profile",
    "TSH": "Thyroid Profile",
    "T3": "Thyroid Profile",
    "T4": "Thyroid Profile",
    "Glucose": "Blood Sugar",
    "HbA1c": "Blood Sugar",
    "Vitamin B12": "Vitamins",
    "Vitamin D": "Vitamins",
    "Vitamin B9": "Vitamins",
    "Folate": "Vitamins",
    "Calcium": "Bone Profile",
    "Phosphorus": "Bone Profile",
    "Magnesium": "Electrolytes",
    "Sodium": "Electrolytes",
    "Potassium": "Electrolytes",
    "Chloride": "Electrolytes",
    "CRP": "Inflammatory Markers",
    "ESR": "Inflammatory Markers",
    "Iron": "Haematology",
    "Ferritin": "Haematology",
}

BODY_PARTS_TO_EMOJI = {
    "Blood": "ü©∏",
    "Bone Marrow": "ü¶¥",
    "Liver": "ü´Å",
    "Digestive System": "ÔøΩËÉÉ",
    "Kidneys": "ü´ò",
    "Urinary System": "üíß",
    "Cardiovascular System": "‚ù§Ô∏è",
    "Heart": "‚ù§Ô∏è",
    "Thyroid": "üîÑ",
    "Endocrine System": "‚ö°",
    "Multiple Systems": "üîÑ",
    "Immune System": "üõ°Ô∏è",
    "Nutritional Status": "ü•ó",
    "General": "üìä"
}

# --- Configuration for Standardization ---
TEST_NAME_MAPPING = {
    re.compile(r'haemoglobin', re.IGNORECASE): 'Haemoglobin',
    re.compile(r'hgb', re.IGNORECASE): 'Haemoglobin',
    re.compile(r'total leucocyte count', re.IGNORECASE): 'Total Leucocyte Count',
    re.compile(r'tlc', re.IGNORECASE): 'Total Leucocyte Count',
    re.compile(r'white blood cell count', re.IGNORECASE): 'Total Leucocyte Count',
    re.compile(r'wbc', re.IGNORECASE): 'Total Leucocyte Count',
    re.compile(r'platelet count', re.IGNORECASE): 'Platelet Count',
    re.compile(r'rbc count', re.IGNORECASE): 'Red Blood Cell Count',
    re.compile(r'red cell count', re.IGNORECASE): 'Red Blood Cell Count',
    re.compile(r'hematocrit', re.IGNORECASE): 'Hematocrit',
    re.compile(r'hct', re.IGNORECASE): 'Hematocrit',
    re.compile(r'packed cell volume', re.IGNORECASE): 'Hematocrit',
    re.compile(r'pcv', re.IGNORECASE): 'Hematocrit',
    re.compile(r'mcv', re.IGNORECASE): 'Mean Corpuscular Volume (MCV)',
    re.compile(r'mch', re.IGNORECASE): 'Mean Corpuscular Haemoglobin (MCH)',
    re.compile(r'mchc', re.IGNORECASE): 'Mean Corpuscular Haemoglobin Concentration (MCHC)',
    re.compile(r'rdw-cv', re.IGNORECASE): 'Red Cell Distribution Width - CV (RDW-CV)',
    re.compile(r'rdw-sd', re.IGNORECASE): 'Red Cell Distribution Width - SD (RDW-SD)',
    re.compile(r'neutrophils?', re.IGNORECASE): 'Neutrophils',
    re.compile(r'lymphocytes?', re.IGNORECASE): 'Lymphocytes',
    re.compile(r'monocytes?', re.IGNORECASE): 'Monocytes',
    re.compile(r'eosinophils?', re.IGNORECASE): 'Eosinophils',
    re.compile(r'basophils?', re.IGNORECASE): 'Basophils',
    re.compile(r'esr', re.IGNORECASE): 'Erythrocyte Sedimentation Rate (ESR)',
    re.compile(r'total bilirubin', re.IGNORECASE): 'Bilirubin - Total',
    re.compile(r'direct bilirubin', re.IGNORECASE): 'Bilirubin - Direct',
    re.compile(r'indirect bilirubin', re.IGNORECASE): 'Bilirubin - Indirect',
    re.compile(r'sgpt', re.IGNORECASE): 'Alanine Aminotransferase (SGPT/ALT)',
    re.compile(r'alt', re.IGNORECASE): 'Alanine Aminotransferase (SGPT/ALT)',
    re.compile(r'sgot', re.IGNORECASE): 'Aspartate Aminotransferase (SGOT/AST)',
    re.compile(r'ast', re.IGNORECASE): 'Aspartate Aminotransferase (SGOT/AST)',
    re.compile(r'alkaline phosphatase', re.IGNORECASE): 'Alkaline Phosphatase (ALP)',
    re.compile(r'alp', re.IGNORECASE): 'Alkaline Phosphatase (ALP)',
    re.compile(r'total protein', re.IGNORECASE): 'Protein - Total',
    re.compile(r'albumin', re.IGNORECASE): 'Albumin',
    re.compile(r'globulin', re.IGNORECASE): 'Globulin',
    re.compile(r'a/g ratio', re.IGNORECASE): 'Albumin/Globulin Ratio (A/G Ratio)',
    re.compile(r'urea', re.IGNORECASE): 'Urea',
    re.compile(r'blood urea nitrogen', re.IGNORECASE): 'Blood Urea Nitrogen (BUN)',
    re.compile(r'bun', re.IGNORECASE): 'Blood Urea Nitrogen (BUN)',
    re.compile(r'creatinine', re.IGNORECASE): 'Creatinine',
    re.compile(r'uric acid', re.IGNORECASE): 'Uric Acid',
    re.compile(r'total cholesterol', re.IGNORECASE): 'Cholesterol - Total',
    re.compile(r'triglycerides', re.IGNORECASE): 'Triglycerides',
    re.compile(r'hdl cholesterol', re.IGNORECASE): 'HDL Cholesterol',
    re.compile(r'ldl cholesterol', re.IGNORECASE): 'LDL Cholesterol',
    re.compile(r'vldl cholesterol', re.IGNORECASE): 'VLDL Cholesterol',
    re.compile(r'cholesterol/hdl ratio', re.IGNORECASE): 'Total Cholesterol/HDL Ratio',
    re.compile(r'glucose fasting', re.IGNORECASE): 'Glucose - Fasting',
    re.compile(r'fbs', re.IGNORECASE): 'Glucose - Fasting',
    re.compile(r'glucose random', re.IGNORECASE): 'Glucose - Random',
    re.compile(r'rbs', re.IGNORECASE): 'Glucose - Random',
    re.compile(r'hba1c', re.IGNORECASE): 'Glycated Haemoglobin (HbA1c)',
    re.compile(r'tsh', re.IGNORECASE): 'Thyroid Stimulating Hormone (TSH)',
    re.compile(r'total t3', re.IGNORECASE): 'Total T3',
    re.compile(r'total t4', re.IGNORECASE): 'Total T4',
    re.compile(r'free t3', re.IGNORECASE): 'Free T3 (FT3)',
    re.compile(r'ft3', re.IGNORECASE): 'Free T3 (FT3)',
    re.compile(r'free t4', re.IGNORECASE): 'Free T4 (FT4)',
    re.compile(r'ft4', re.IGNORECASE): 'Free T4 (FT4)',
}

UNIT_MAPPING = {
    re.compile(r'gm/dl', re.IGNORECASE): 'g/dL',
    re.compile(r'g/l', re.IGNORECASE): 'g/L',
    re.compile(r'cells/cumm', re.IGNORECASE): 'cells/¬µL',
    re.compile(r'/cumm', re.IGNORECASE): '/¬µL',
    re.compile(r'thou/cumm', re.IGNORECASE): 'x10¬≥/¬µL',
    re.compile(r'10\^3/ul', re.IGNORECASE): 'x10¬≥/¬µL',
    re.compile(r'x10\^3/Œºl', re.IGNORECASE): 'x10¬≥/¬µL',
    re.compile(r'mill/cumm', re.IGNORECASE): 'x10‚Å∂/¬µL',
    re.compile(r'10\^6/ul', re.IGNORECASE): 'x10‚Å∂/¬µL',
    re.compile(r'x10\^6/Œºl', re.IGNORECASE): 'x10‚Å∂/¬µL',
    re.compile(r'mg/dl', re.IGNORECASE): 'mg/dL',
    re.compile(r'iu/l', re.IGNORECASE): 'IU/L',
    re.compile(r'u/l', re.IGNORECASE): 'U/L',
    re.compile(r'¬µiu/ml', re.IGNORECASE): '¬µIU/mL',
    re.compile(r'ng/dl', re.IGNORECASE): 'ng/dL',
    re.compile(r'pg/ml', re.IGNORECASE): 'pg/mL',
    re.compile(r'%', re.IGNORECASE): '%',
    re.compile(r'fl', re.IGNORECASE): 'fL',
    re.compile(r'pg', re.IGNORECASE): 'pg',
    re.compile(r'mm/hr', re.IGNORECASE): 'mm/hr',
}

STATUS_MAPPING = {
    re.compile(r'low', re.IGNORECASE): 'Low',
    re.compile(r'normal', re.IGNORECASE): 'Normal',
    re.compile(r'high', re.IGNORECASE): 'High',
    re.compile(r'critical', re.IGNORECASE): 'Critical',
    re.compile(r'n/a', re.IGNORECASE): 'N/A',
    re.compile(r'not applicable', re.IGNORECASE): 'N/A',
    re.compile(r'within normal limits', re.IGNORECASE): 'Normal',
    re.compile(r'within reference range', re.IGNORECASE): 'Normal',
    re.compile(r'near optimal', re.IGNORECASE): 'Near Optimal',
    re.compile(r'desirable', re.IGNORECASE): 'Desirable',
    re.compile(r'borderline high', re.IGNORECASE): 'Borderline High',
}
